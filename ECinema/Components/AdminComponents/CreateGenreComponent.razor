@inject HttpClient Http
@rendermode InteractiveServer

<MudPopoverProvider />
<MudCard Style="max-width: 600px;">
    <MudCardHeader>
        <MudText Typo="Typo.h6">Create New Genre</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="genreName" Label="Genre Name" Variant="Variant.Filled" />
        <MudButton OnClick="CreateGenreHandler" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">
            Create Genre
        </MudButton>

        @if (isSuccess)
        {
            <MudText Typo="Typo.body1" Color="Color.Primary" Class="mt-4">Genre created successfully!</MudText>
        }

        @if (isError)
        {
            <MudText Typo="Typo.body1" Color="Color.Primary" Class="mt-4">Failed to create genre.</MudText>
        }
    </MudCardContent>
</MudCard>

@code {
    private string genreName = string.Empty;
    private bool isSuccess = false;
    private bool isError = false;

    private async Task CreateGenreHandler()
    {
        try
        {
            var newGenre = new { GenreName = genreName };

            var response = await Http.PostAsJsonAsync("api/genres", newGenre);

            if (response.IsSuccessStatusCode)
            {
                isSuccess = true;
                isError = false;
                genreName = string.Empty;
            }
            else
            {
                isSuccess = false;
                isError = true;
            }
        }
        catch (Exception)
        {
            isSuccess = false;
            isError = true;
        }
    }
}
