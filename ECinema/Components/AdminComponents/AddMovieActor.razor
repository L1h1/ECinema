@inject HttpClient Http
@rendermode InteractiveServer
<MudForm>
    <MudTextField T="int" @bind-Value="actorMovie.MovieId" Label="Movie ID" Required="true" />
    <MudTextField T="int" @bind-Value="actorMovie.ActorId" Label="Actor ID" Required="true" />

    <MudButton OnClick="AddMovieActorHandler" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">
        Add Actor to Movie
    </MudButton>
</MudForm>

@if (isActorAdded)
{
    <MudText Typo="Typo.body1" Color="Color.Success">Actor Added to Movie!</MudText>
}

@if (isError)
{
    <MudText Typo="Typo.body1" Color="Color.Error">Error adding actor to movie.</MudText>
}

@code {
    private (int MovieId, int ActorId) actorMovie = new();
    private bool isActorAdded = false;
    private bool isError = false;

    private async Task AddMovieActorHandler()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/movie/actor", new {MovieId = actorMovie.MovieId, ActorId=actorMovie.ActorId });
            if (response.IsSuccessStatusCode)
            {
                isActorAdded = true;
                isError = false;
                actorMovie = new (); // Reset form
            }
            else
            {
                isActorAdded = false;
                isError = true;
            }
        }
        catch (Exception)
        {
            isError = true;
        }
    }
}
