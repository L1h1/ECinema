@inject HttpClient Http
@rendermode InteractiveServer
<MudTextField T="string" ShrinkLabel @bind-Value="email" Label="Email" Required="true" />
<MudTextField T="string" ShrinkLabel @bind-Value="password" Label="Password" InputType="InputType.Password" Required="true" />

<MudButton OnClick="CheckUserCredentials" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">
    Login
</MudButton>

@if (!string.IsNullOrEmpty(token))
{
    <MudText Typo="Typo.body1" Color="Color.Primary" Class="mt-4">JWT Token: @token</MudText>
}

@if (isError)
{
    <MudText Typo="Typo.body1" Color="Color.Error" Class="mt-4">Invalid credentials, please try again.</MudText>
}

@code {
    private string email;
    private string password;
    private string token;
    private bool isError;

    private async Task CheckUserCredentials()
    {
        var response = await Http.PostAsJsonAsync("api/users/check-credentials", new { email = email, password = password });
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<JwtResponse>();
            token = result?.Token;
            isError = false;
        }
        else
        {
            isError = true;
        }
    }

    public class JwtResponse
    {
        public string Token { get; set; }
    }
}
